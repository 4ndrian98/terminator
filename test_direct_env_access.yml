steps:
  # Step 1: Set an environment variable
  - id: set_test_var
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("Setting test environment variable...");
        return {
          status: 'success',
          test_variable: 'hello_world',
          counter: 42
        };

  # Step 2: Test direct access in jump conditions (without env. prefix)
  - id: test_jump_direct
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("Testing jump conditions with direct access...");
        return { status: 'success' };
    jumps:
      # Direct access without env. prefix
      - if: "test_variable == 'hello_world'"
        to_id: direct_access_worked
        reason: "Direct variable access works!"
      - if: "test_variable == 'wrong_value'"
        to_id: direct_access_failed
        reason: "This should not happen"

  # Step 3: This should be skipped due to jump
  - id: should_be_skipped
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("ERROR: This step should have been skipped!");
        return { status: 'error', message: 'Jump did not work' };

  # Step 4: Jump target for success
  - id: direct_access_worked
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("✅ SUCCESS: Direct variable access in conditions works!");
        console.log("The variable 'test_variable' was accessed directly without 'env.' prefix");
        return { status: 'success', result: 'Direct access successful' };

  # Step 5: Test numeric comparison without env. prefix
  - id: test_numeric
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("Testing numeric comparison...");
        return { status: 'success' };
    jumps:
      - if: "counter == '42'"  # String comparison of number
        to_id: numeric_test_passed
        reason: "Numeric comparison works"

  # Step 6: Another skip target
  - id: numeric_test_failed
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("ERROR: Numeric test failed!");
        return { status: 'error' };

  # Step 7: Success for numeric test
  - id: numeric_test_passed
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("✅ SUCCESS: Numeric comparison without env. prefix works!");
        return { status: 'success' };

  # Step 8: Test backward compatibility - env. prefix should still work
  - id: test_backward_compat
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("Testing backward compatibility with env. prefix...");
        return { status: 'success' };
    jumps:
      - if: "env.test_variable == 'hello_world'"
        to_id: backward_compat_works
        reason: "Backward compatibility maintained"

  # Step 9: Skip due to jump
  - id: backward_compat_failed
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("ERROR: Backward compatibility failed!");
        return { status: 'error' };

  # Step 10: Final success
  - id: backward_compat_works
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("✅ SUCCESS: Backward compatibility works - env. prefix still functions!");
        console.log("\n=== ALL TESTS PASSED ===");
        console.log("1. Direct variable access (without env.) ✓");
        console.log("2. Numeric comparisons ✓");
        console.log("3. Backward compatibility (with env.) ✓");
        return {
          status: 'success',
          all_tests_passed: true
        };

# Error handling step (should not be reached)
  - id: direct_access_failed
    tool_name: run_command
    arguments:
      engine: javascript
      run: |
        console.log("ERROR: Direct variable access failed!");
        return { status: 'error', message: 'Direct access did not work' };