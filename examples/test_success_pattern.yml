---
# Simple test workflow to demonstrate success/failure indication
tool_name: execute_sequence
arguments:
  variables:
    test_message:
      type: string
      label: Test Message
      default: "Testing success pattern"
      required: true

  inputs:
    test_message: "Hello from Terminator CLI!"

  steps:
    # Get desktop info as a simple test
    - tool_name: get_desktop_info
      arguments: {}
      id: "desktop_info"
      delay_ms: 500

    # Get the window tree (should work on any system)
    - tool_name: get_focused_window_tree
      arguments:
        random_string: "test_capture"
      id: "window_capture"

  output_parser:
    ui_tree_source_step_id: "window_capture"
    javascript_code: |
      // Simple parser to test success/failure indication

      // Check if we have a valid UI tree
      const hasValidTree = tree && tree !== null && typeof tree === 'object';

      // Extract some basic info (safely)
      let windowInfo = {
        role: 'unknown',
        name: 'untitled',
        childCount: 0
      };

      if (hasValidTree) {
        windowInfo = {
          role: tree.attributes?.role || 'unknown',
          name: tree.attributes?.name || 'untitled',
          childCount: tree.children ? tree.children.length : 0
        };
      }

      // Determine success - we succeed if we got any UI tree data
      const success = hasValidTree && windowInfo.childCount > 0;

      // Return standardized response
      return {
        success: success,
        data: success ? windowInfo : null,
        message: success 
          ? `Successfully captured window: ${windowInfo.name} (${windowInfo.childCount} children)`
          : "Failed to capture valid window data - tree was null or empty",
        error: success ? null : "No valid UI tree found (tree may be null)",
        validation: {
          has_tree: hasValidTree,
          tree_is_null: tree === null || tree === undefined,
          has_children: windowInfo.childCount > 0,
          window_name: windowInfo.name
        }
      };

  stop_on_error: false
