# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # Windows 10 box configuration
  config.vm.box = "stromweld/windows-10"
  
  # VM resources
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 4096
    vb.cpus = 2
    vb.gui = true
    vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"] # Enables a bidirectional clipboard between host and guest
  end

  # Network configuration
  config.vm.network "forwarded_port", guest: 22, host: 2222, id: "ssh"

  # WinRM configuration for initial setup
  config.vm.communicator = "winrm"
  config.winrm.username = "vagrant"
  config.winrm.password = "vagrant"

  # Sync the workspace
  config.vm.synced_folder "..", "C:/Users/vagrant/terminator", type: "virtualbox"

  # Combined provisioning script
  config.vm.provision "shell", name: "full_setup", inline: <<-SHELL, privileged: true
    Write-Host "Starting VM provisioning..." -ForegroundColor Green

    # Setup PowerShell profile
    Write-Host "Setting up PowerShell profile..." -ForegroundColor Yellow
    $profilePath = "$env:USERPROFILE\\Documents\\WindowsPowerShell\\Microsoft.PowerShell_profile.ps1"
    if (!(Test-Path $profilePath)) { New-Item -ItemType File -Path $profilePath -Force | Out-Null }
    $scriptPath = 'C:/Users/vagrant/terminator/scripts/gui-launch.ps1'
    Add-Content -Path $profilePath -Value "# gui-launch function"
    Add-Content -Path $profilePath -Value "function gui-launch { & '$scriptPath' @args }"
    Write-Host "PowerShell profile setup completed" -ForegroundColor Green

    # Prevent shutdown: inject registry & power settings
    Write-Host "Configuring power and shutdown settings..." -ForegroundColor Yellow
    powercfg /change standby-timeout-ac 0
    powercfg /change hibernate-timeout-ac 0
    powercfg /change monitor-timeout-ac 0
    reg add "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon" /v AutoLogonCount /t REG_DWORD /d 999 /f
    reg add "HKLM\\SYSTEM\\CurrentControlSet\\Control\\Power" /v HibernateEnabled /t REG_DWORD /d 0 /f
    schtasks /Change /TN "\\Microsoft\\Windows\\UpdateOrchestrator\\Reboot" /Disable 2>$null
    Start-Process -FilePath sc.exe -ArgumentList "config sppsvc start= disabled" -Wait
    Stop-Service sppsvc
    Write-Host "Power and shutdown settings configured" -ForegroundColor Green

    # Setup SSH
    Write-Host "Setting up SSH server..." -ForegroundColor Yellow
    Add-WindowsCapability -Online -Name OpenSSH.Server~~~~0.0.1.0
    Start-Service sshd
    Set-Service -Name sshd -StartupType 'Automatic'
    
    # Configure firewall for SSH
    if (!(Get-NetFirewallRule -Name "OpenSSH-Server-In-TCP")) {
      New-NetFirewallRule -Name "OpenSSH-Server-In-TCP" -DisplayName "OpenSSH Server (sshd) inbound" -Enabled True -Direction Inbound -Protocol TCP -Action Allow -LocalPort 22
    }
    Write-Host "SSH server setup completed" -ForegroundColor Green

    # Install Scoop and tools
    Write-Host "Installing Scoop package manager..." -ForegroundColor Yellow
    iex "& {$(irm get.scoop.sh)} -RunAsAdmin"
    Write-Host "Scoop installation completed" -ForegroundColor Green

    # Install PSTools
    Write-Host "Installing PSTools..." -ForegroundColor Yellow
    scoop bucket add sysinternals
    scoop install sysinternals/pstools
    Write-Host "PSTools installation completed" -ForegroundColor Green

    # Install Git
    Write-Host "Installing Git..." -ForegroundColor Yellow
    scoop install git
    reg import "C:\\Users\\vagrant\\scoop\\apps\\git\\current\\install-context.reg"
    reg import "C:\\Users\\vagrant\\scoop\\apps\\git\\current\\install-file-associations.reg"
    Write-Host "Git installation completed" -ForegroundColor Green

    # Install Python
    Write-Host "Installing Python..." -ForegroundColor Yellow
    scoop install python
    reg import "C:\\Users\\vagrant\\scoop\\apps\\python\\current\\install-pep-514.reg"
    Write-Host "Python installation completed" -ForegroundColor Green

    Write-Host "VM provisioning completed successfully!" -ForegroundColor Green
  SHELL
end